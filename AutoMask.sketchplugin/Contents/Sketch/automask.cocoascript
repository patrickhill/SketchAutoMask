var autoMask = function(context) {
	var pluginName = 'Auto Mask';
	var doc = context.document;
	var Document = require('sketch/dom').Document
	var document = require('sketch/dom').getSelectedDocument()
	var Page = require('sketch/dom').Page
	var page = document.selectedPage
	var Rectangle = require('sketch/dom').Rectangle
	var Shape = require('sketch/dom').Shape
	var ShapePath = require('sketch/dom').ShapePath
	var Group = require('sketch/dom').Group
	var selection = document.selectedLayers
	var artboardsFromSelection = context.selection.valueForKeyPath("@distinctUnionOfObjects.parentArtboard")

	if (selection.length < 1) {
		[doc showMessage: pluginName + ': select something']
	} else if (selection.length > 1) {
		[doc showMessage: pluginName + ': select one item at a time']
	} else {
		selection.forEach( layer => {

			// get x, y, width, height
			layerX = layer.frame.x
			layerY = layer.frame.y
			layerWidth = layer.frame.width1
			layerHeight = layer.frame.height
			groupName = layer.name + '-masked'
			layerIndex = layer.index
			parent = artboardsFromSelection.length > 0 ? artboardsFromSelection[0] : page

			// create a group
			var group = new Group({
				name: groupName,
				parent: parent,
			})

			// create rectangle at location of selection
			var rect = new Rectangle(layer.frame.x, layer.frame.y, layer.frame.width, layer.frame.height)
			
			var mask = new ShapePath({
				name: 'mask',
				frame: rect,
				parent: group,
			})

			// add layer to it
			layer.parent = group

			// moves the group to the position of the masked layer so your layers don't get messed up
			while (group.index > layerIndex) {
				group.moveBackward();
			}

			// make sure group fits to contents
			group.adjustToFit()
			
			// make the newly created mask the key selection
			selection.clear()
			mask.selected = true

		})

		// set the mask property for the mask layer
		var newSelection  = updateContext().selection[0]
		newSelection.hasClippingMask = true;
		newSelection.clippingMaskMode = 0;
	}
	
};


// use this function to force the context refresh.
// without it, the script won't see the selection change
function updateContext() {
	var doc = NSDocumentController.sharedDocumentController().currentDocument();

	if (MSApplicationMetadata.metadata().appVersion > 41.2) {
			var selection = doc.selectedLayers().layers();
	} else {
			var selection = doc.selectedLayers();
	}

	return {
			doc : doc,
			selection : selection
	}
}